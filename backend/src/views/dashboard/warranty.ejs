<%- include('../layouts/main.ejs') %>
<div class="main-content">
    <h1 class="text-center mb-4">Quản lý Bảo Hành</h1>

    <style>
        .card {
            border: 1px solid #ddd;
            border-radius: 10px;
            margin-bottom: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .card-title {
            font-weight: bold;
            color: #333;
        }
        .card-text {
            color: #555;
        }
        .alert {
            font-size: 14px;
        }
        .table th, .table td {
            vertical-align: middle;
        }
        .badge-warranty {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
        }
        .badge-processing {
            background-color: #ffc107;
            color: #000;
        }
        .badge-completed {
            background-color: #28a745;
            color: #fff;
        }
        .badge-expired {
            background-color: #dc3545;
            color: #fff;
        }
        .add-btn {
            margin-bottom: 20px;
        }
    </style>

    <!-- Button to open Add Warranty modal -->
    <div class="d-flex justify-content-end mb-4">
        <button class="btn btn-primary" onclick="openAddModal()">
            <i class="fas fa-plus"></i> Thêm Bảo Hành Mới
        </button>
    </div>

    <!-- Tìm kiếm bảo hành -->
    <div class="container mt-2 mb-4">
        <div class="row">
            <div class="col-md-6">
                <input type="text" id="customerSearch" class="form-control mb-4" placeholder="Tìm kiếm theo tên khách hàng" style="border-radius: 8px; border: 2px solid #ccc; padding: 10px; font-size: 16px;">
            </div>
            <div class="col-md-6">
                <select id="statusFilter" class="form-select mb-4" style="border-radius: 8px; border: 2px solid #ccc; padding: 10px; font-size: 16px;">
                    <option value="">Tất cả trạng thái</option>
                    <option value="Đang xử lý">Đang xử lý</option>
                    <option value="Đã hoàn thành">Đã hoàn thành</option>
                    <option value="Hết hạn">Hết hạn</option>
                </select>
            </div>
        </div>
        <div id="searchResults"></div>
    </div>

    <!-- Danh sách bảo hành -->
    <div>
        <h3 class="mt-2 mb-3">Danh sách bảo hành</h3>
        <table class="table table-bordered table-hover table-striped">
            <thead class="table-primary">
                <tr>
                    <th width="20%">Sản phẩm</th>
                    <th width="20%">Khách hàng</th>
                    <th width="15%">Đơn hàng</th>
                    <th width="10%">Trạng thái</th>
                    <th width="10%">Ngày bắt đầu</th>
                    <th width="10%">Ngày kết thúc</th>
                    <th width="10%">Thời gian BH</th>
                    <th width="5%">Hành động</th>
                </tr>
            </thead>
            <tbody id="warrantyTableBody">
                <% warranties.forEach(function(warranty) { %>
                    <tr>
                        <td><strong><%= warranty.product ? warranty.product.name : 'Không có' %></strong></td>
                        <td>
                            <% if (warranty.customer) { %>
                                <strong><%= warranty.customer.fullName %></strong><br>
                                <small><i class="fas fa-phone-alt"></i> <%= warranty.customer.phoneNumber %></small>
                            <% } else { %>
                                <span class="text-muted">Không có</span>
                            <% } %>
                        </td>
                        <td>
                            <% if (warranty.order) { %>
                                <span class="badge bg-secondary">#<%= warranty.order.orderNumber %></span>
                            <% } else { %>
                                <span class="text-muted">Không có</span>
                            <% } %>
                        </td>
                        <td class="text-center">
                            <% if (warranty.status === 'Đang xử lý') { %>
                                <span class="badge badge-warranty badge-processing"><i class="fas fa-clock me-1"></i> Đang xử lý</span>
                            <% } else if (warranty.status === 'Đã hoàn thành') { %>
                                <span class="badge badge-warranty badge-completed"><i class="fas fa-check-circle me-1"></i> Đã hoàn thành</span>
                            <% } else { %>
                                <span class="badge badge-warranty badge-expired"><i class="fas fa-times-circle me-1"></i> Hết hạn</span>
                            <% } %>
                        </td>
                        <td class="text-center"><%= new Date(warranty.startDate).toLocaleDateString() %></td>
                        <td class="text-center"><%= new Date(warranty.endDate).toLocaleDateString() %></td>
                        <td class="text-center"><strong><%= warranty.warrantyPeriod %></strong> tháng</td>
                        <td class="text-center">
                            <button class="btn btn-warning btn-sm" onclick="editWarranty('<%= warranty._id %>')">
                                <i class="fas fa-edit"></i>
                            </button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

</div>

<!-- Form thêm bảo hành (Modal) -->
<div id="addWarrantyModal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm thông tin bảo hành mới</h5>
                <button type="button" class="btn-close" onclick="closeAddModal()"></button>
            </div>
            <div class="modal-body">
                <form id="addWarrantyForm" action="/warranty" method="POST">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Sản phẩm <span class="text-danger">*</span></label>
                                <select class="form-select" name="productId" id="productSelect" required>
                                    <option value="" selected disabled>-- Chọn sản phẩm --</option>
                                    <!-- Sẽ được điền bởi JavaScript -->
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Đơn hàng (không bắt buộc)</label>
                                <select class="form-select" name="orderId" id="orderSelect">
                                    <option value="">-- Không chọn --</option>
                                    <!-- Sẽ được điền bởi JavaScript -->
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Khách hàng (không bắt buộc)</label>
                                <select class="form-select" name="customerId" id="customerSelect">
                                    <option value="">-- Không chọn --</option>
                                    <!-- Sẽ được điền bởi JavaScript -->
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Trạng thái</label>
                                <select class="form-select" name="status">
                                    <option value="Đang xử lý">Đang xử lý</option>
                                    <option value="Đã hoàn thành">Đã hoàn thành</option>
                                    <option value="Hết hạn">Hết hạn</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ngày bắt đầu <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" name="startDate" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ngày kết thúc <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" name="endDate" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Thời gian bảo hành (tháng) <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" name="warrantyPeriod" min="1" required>
                            </div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Thêm thông tin bảo hành</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Form chỉnh sửa bảo hành (ẩn ban đầu) -->
<div id="editWarrantyModal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chỉnh sửa thông tin bảo hành</h5>
                <button type="button" class="btn-close" onclick="closeEditModal()"></button>
            </div>
            <div class="modal-body">
                <form id="editWarrantyForm">
                    <input type="hidden" id="editWarrantyId">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Sản phẩm <span class="text-danger">*</span></label>
                                <select class="form-select" id="editProductId" required>
                                    <option value="" selected disabled>-- Chọn sản phẩm --</option>
                                    <!-- Sẽ được điền bởi JavaScript -->
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Đơn hàng (không bắt buộc)</label>
                                <select class="form-select" id="editOrderId">
                                    <option value="">-- Không chọn --</option>
                                    <!-- Sẽ được điền bởi JavaScript -->
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Khách hàng (không bắt buộc)</label>
                                <select class="form-select" id="editCustomerId">
                                    <option value="">-- Không chọn --</option>
                                    <!-- Sẽ được điền bởi JavaScript -->
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Trạng thái</label>
                                <select class="form-select" id="editStatus">
                                    <option value="Đang xử lý">Đang xử lý</option>
                                    <option value="Đã hoàn thành">Đã hoàn thành</option>
                                    <option value="Hết hạn">Hết hạn</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ngày bắt đầu <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="editStartDate" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ngày kết thúc <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="editEndDate" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Thời gian bảo hành (tháng) <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="editWarrantyPeriod" min="1" required>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="updateWarranty()">Lưu</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script>
    // Khởi tạo form khi trang được load
    document.addEventListener('DOMContentLoaded', function() {
        // Load select options
        loadProductsWithRetry();
        loadOrders();
        loadCustomers();
    });

    // Load danh sách sản phẩm với retry logic
    async function loadProductsWithRetry(retryCount = 0) {
        try {
            const response = await fetch('/products/json');
            
            if (!response.ok) {
                throw new Error(`Failed to fetch products: ${response.status} ${response.statusText}`);
            }
            
            const products = await response.json();
            console.log("Products loaded:", products); // Debug
            
            const addProductSelect = document.getElementById('productSelect');
            const editProductSelect = document.getElementById('editProductId');
            
            if (!addProductSelect || !editProductSelect) {
                console.error("Product select elements not found");
                return;
            }
            
            let options = '<option value="" disabled selected>-- Chọn sản phẩm --</option>';
            
            if (products && products.data && products.data.length > 0) {
                products.data.forEach(product => {
                    options += `<option value="${product._id}">${product.name || 'Sản phẩm không tên'}</option>`;
                });
            } else {
                options += '<option value="" disabled>Không có sản phẩm nào</option>';
            }
            
            addProductSelect.innerHTML = options;
            editProductSelect.innerHTML = options;
            
            console.log("Product options set");
        } catch (error) {
            console.error('Lỗi khi tải danh sách sản phẩm:', error);
            
            // Retry up to 3 times
            if (retryCount < 3) {
                console.log(`Retrying (${retryCount + 1}/3)...`);
                setTimeout(() => loadProductsWithRetry(retryCount + 1), 1000);
            }
        }
    }

    // Load danh sách đơn hàng
    async function loadOrders() {
        try {
            const response = await fetch('/orders/json');
            const orders = await response.json();
            
            const addOrderSelect = document.getElementById('orderSelect');
            const editOrderSelect = document.getElementById('editOrderId');
            
            if (!addOrderSelect || !editOrderSelect) {
                console.error("Order select elements not found");
                return;
            }
            
            let options = '<option value="">-- Không chọn --</option>';
            
            if (orders && orders.length > 0) {
                orders.forEach(order => {
                    options += `<option value="${order._id}">#${order.orderNumber || order._id}</option>`;
                });
            }
            
            addOrderSelect.innerHTML = options;
            editOrderSelect.innerHTML = options;
        } catch (error) {
            console.error('Lỗi khi tải danh sách đơn hàng:', error);
        }
    }

    // Load danh sách khách hàng
    async function loadCustomers() {
        try {
            const response = await fetch('/customers/json');
            const customers = await response.json();
            
            const addCustomerSelect = document.getElementById('customerSelect');
            const editCustomerSelect = document.getElementById('editCustomerId');
            
            if (!addCustomerSelect || !editCustomerSelect) {
                console.error("Customer select elements not found");
                return;
            }
            
            let options = '<option value="">-- Không chọn --</option>';
            
            if (customers && customers.length > 0) {
                customers.forEach(customer => {
                    options += `<option value="${customer._id}">${customer.fullName} (${customer.phoneNumber || 'N/A'})</option>`;
                });
            }
            
            addCustomerSelect.innerHTML = options;
            editCustomerSelect.innerHTML = options;
        } catch (error) {
            console.error('Lỗi khi tải danh sách khách hàng:', error);
        }
    }

    // Mở modal thêm mới
    function openAddModal() {
        document.getElementById('addWarrantyModal').style.display = 'block';
        document.getElementById('addWarrantyModal').classList.add('show');
        document.body.classList.add('modal-open');
        
        // Tạo backdrop
        const backdrop = document.createElement('div');
        backdrop.className = 'modal-backdrop fade show';
        document.body.appendChild(backdrop);
        
        // Set default date values
        const today = new Date();
        const defaultEndDate = new Date();
        defaultEndDate.setFullYear(today.getFullYear() + 1); // Default 1 year warranty
        
        document.querySelector('input[name="startDate"]').value = formatDateForInput(today);
        document.querySelector('input[name="endDate"]').value = formatDateForInput(defaultEndDate);
        document.querySelector('input[name="warrantyPeriod"]').value = "12"; // Default 12 months
    }
    
    // Đóng modal thêm mới
    function closeAddModal() {
        document.getElementById('addWarrantyModal').style.display = 'none';
        document.getElementById('addWarrantyModal').classList.remove('show');
        document.body.classList.remove('modal-open');
        
        // Xóa backdrop
        const backdrop = document.querySelector('.modal-backdrop');
        if (backdrop) {
            backdrop.remove();
        }
    }

    // Form validation
    document.getElementById('addWarrantyForm').addEventListener('submit', function(event) {
        event.preventDefault();
        
        const productId = document.getElementById('productSelect').value;
        const startDate = document.querySelector('input[name="startDate"]').value;
        const endDate = document.querySelector('input[name="endDate"]').value;
        const warrantyPeriod = document.querySelector('input[name="warrantyPeriod"]').value;
        
        if (!productId || !startDate || !endDate || !warrantyPeriod) {
            alert('Vui lòng điền đầy đủ thông tin bắt buộc!');
            return;
        }
        
        const start = new Date(startDate);
        const end = new Date(endDate);
        
        if (end <= start) {
            alert('Ngày kết thúc phải sau ngày bắt đầu!');
            return;
        }
        
        if (warrantyPeriod <= 0) {
            alert('Thời gian bảo hành phải lớn hơn 0!');
            return;
        }
        
        this.submit();
    });

    // Mở form chỉnh sửa
    async function editWarranty(id) {
        try {
            const response = await fetch(`/warranty/${id}`);
            const warranty = await response.json();
            
            document.getElementById('editWarrantyId').value = warranty._id;
            document.getElementById('editProductId').value = warranty.product._id;
            
            // Set optional fields
            if (warranty.order && warranty.order._id) {
                document.getElementById('editOrderId').value = warranty.order._id;
            } else {
                document.getElementById('editOrderId').value = "";
            }
            
            if (warranty.customer && warranty.customer._id) {
                document.getElementById('editCustomerId').value = warranty.customer._id;
            } else {
                document.getElementById('editCustomerId').value = "";
            }
            
            document.getElementById('editStatus').value = warranty.status;
            
            // Format dates for input[type="date"]
            const startDate = new Date(warranty.startDate);
            const endDate = new Date(warranty.endDate);
            
            document.getElementById('editStartDate').value = formatDateForInput(startDate);
            document.getElementById('editEndDate').value = formatDateForInput(endDate);
            document.getElementById('editWarrantyPeriod').value = warranty.warrantyPeriod;
            
            // Hiển thị modal
            document.getElementById('editWarrantyModal').style.display = 'block';
            document.getElementById('editWarrantyModal').classList.add('show');
            document.body.classList.add('modal-open');
            
            // Tạo backdrop
            const backdrop = document.createElement('div');
            backdrop.className = 'modal-backdrop fade show';
            document.body.appendChild(backdrop);
        } catch (error) {
            console.error('Lỗi khi tải thông tin bảo hành:', error);
            alert('Không thể tải thông tin bảo hành!');
        }
    }

    // Đóng form chỉnh sửa
    function closeEditModal() {
        document.getElementById('editWarrantyModal').style.display = 'none';
        document.getElementById('editWarrantyModal').classList.remove('show');
        document.body.classList.remove('modal-open');
        
        // Xóa backdrop
        const backdrop = document.querySelector('.modal-backdrop');
        if (backdrop) {
            backdrop.remove();
        }
    }

    // Cập nhật bảo hành
    async function updateWarranty() {
        const id = document.getElementById('editWarrantyId').value;
        
        const warrantyData = {
            productId: document.getElementById('editProductId').value,
            orderId: document.getElementById('editOrderId').value || null,
            customerId: document.getElementById('editCustomerId').value || null,
            status: document.getElementById('editStatus').value,
            startDate: document.getElementById('editStartDate').value,
            endDate: document.getElementById('editEndDate').value,
            warrantyPeriod: document.getElementById('editWarrantyPeriod').value
        };
        
        // Validate data
        if (!warrantyData.productId || !warrantyData.startDate || !warrantyData.endDate || !warrantyData.warrantyPeriod) {
            alert('Vui lòng điền đầy đủ thông tin bắt buộc!');
            return;
        }
        
        const start = new Date(warrantyData.startDate);
        const end = new Date(warrantyData.endDate);
        
        if (end <= start) {
            alert('Ngày kết thúc phải sau ngày bắt đầu!');
            return;
        }
        
        if (warrantyData.warrantyPeriod <= 0) {
            alert('Thời gian bảo hành phải lớn hơn 0!');
            return;
        }
        
        try {
            const response = await fetch(`/warranty/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(warrantyData)
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Cập nhật thông tin bảo hành thành công!');
                closeEditModal();
                location.reload();
            } else {
                alert(result.message || 'Cập nhật thất bại!');
            }
        } catch (error) {
            console.error('Lỗi khi cập nhật bảo hành:', error);
            alert('Lỗi khi cập nhật thông tin bảo hành!');
        }
    }

    // Format date for input[type="date"]
    function formatDateForInput(date) {
        if (!(date instanceof Date) || isNaN(date.getTime())) {
            console.error('Invalid date:', date);
            return '';
        }
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${year}-${month}-${day}`;
    }

    // Filter by status
    document.getElementById('statusFilter').addEventListener('change', function() {
        const status = this.value;
        const rows = document.querySelectorAll('#warrantyTableBody tr');
        
        rows.forEach(row => {
            const statusCell = row.querySelector('td:nth-child(5)');
            const statusText = statusCell.textContent.trim();
            
            if (status === '' || statusText.includes(status)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

    // Search by customer name
    document.getElementById('customerSearch').addEventListener('input', debounce(function() {
        const searchTerm = this.value.trim().toLowerCase();
        
        if (searchTerm.length === 0) {
            // Reset display
            const rows = document.querySelectorAll('#warrantyTableBody tr');
            rows.forEach(row => row.style.display = '');
            return;
        }
        
        if (searchTerm.length >= 2) {
            const rows = document.querySelectorAll('#warrantyTableBody tr');
            
            rows.forEach(row => {
                const customerCell = row.querySelector('td:nth-child(3)');
                const customerText = customerCell.textContent.trim().toLowerCase();
                
                if (customerText.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
    }, 300));

    // Debounce function
    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func.apply(this, args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }
</script>
