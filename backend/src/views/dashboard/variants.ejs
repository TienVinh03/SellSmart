<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý biến thể</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body { 
            background-color: #f4f6f9; 
            font-family: 'Segoe UI', Tahoma, sans-serif;
            min-height: 100vh;
            margin: 0;
            padding: 15px;
        }
        .main-container {
            display: flex;
            gap: 20px;
            height: calc(100vh - 80px);
            max-width: 100%;
        }
        .left-panel, .right-panel {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 20px;
            display: flex;
            flex-direction: column;
            min-height: 0; /* Để scroll hoạt động tốt hơn */
        }
        .left-panel {
            flex: 3; /* Tăng tỷ lệ cho panel bên trái */
            max-width: none;
        }
        .right-panel {
            flex: 2; /* Tăng tỷ lệ cho panel bên phải */
            max-width: none;
        }
        .panel-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #eee;
        }
        .top-controls {
            background: white;
            padding: 12px 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .btn-custom {
            padding: 8px 16px;
            font-size: 14px;
            font-weight: 500;
            border-radius: 6px;
            transition: all 0.2s;
        }
        .btn-custom:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .modal-content {
            border-radius: 12px;
        }
        .modal-header {
            border-radius: 12px 12px 0 0;
        }
        .table-container {
            flex: 1;
            overflow-y: auto;
            margin: 0;
            border-radius: 8px;
            border: 1px solid #eee;
        }
        .variant-selection-container {
            flex: 1;
            overflow-y: auto;
            padding-right: 5px;
        }
        .variant-row {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 10px;
        }
        .variant-row select {
            flex: 1;
        }
        .variant-row .btn-delete {
            padding: 8px 12px;
            height: 38px; /* Để cùng chiều cao với select */
        }
        .variant-group {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
        }
        .variant-group-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 15px;
        }
        .variant-group-title {
            font-weight: 600;
            margin: 0;
            color: #495057;
        }
        .variant-rows-container {
            margin-bottom: 10px;
        }
        .table {
            margin-bottom: 0;
        }
        .table th {
            position: sticky;
            top: 0;
            background-color: #f8f9fa;
            z-index: 1;
            padding: 12px 15px;
        }
        .table td {
            padding: 12px 15px;
        }
        .badge {
            font-size: 12px;
            padding: 6px 10px;
        }
        .action-buttons {
            display: flex;
            gap: 6px;
        }
        .toast-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1050;
        }
    </style>
</head>
<body>
    <!-- Top Controls -->
    <div class="top-controls">
        <div class="left-buttons">
            <button class="btn btn-primary btn-custom" data-bs-toggle="modal" data-bs-target="#addVariantModal">
                <i class="fas fa-plus me-1"></i> Thêm thuộc tính
            </button>
        </div>
        <div class="right-buttons">
            <button class="btn btn-success btn-custom" onclick="confirmSelection()">
                <i class="fas fa-check me-1"></i> Xác nhận chọn
            </button>
        </div>
    </div>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Left Panel - Variant List -->
        <div class="left-panel">
            <h5 class="panel-title">Danh sách thuộc tính</h5>
            <div class="table-container">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Tên thuộc tính</th>
                            <th>Giá trị</th>
                            <th class="text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="variantTableBody">
                        <% variants.forEach(variant => { %>
                            <tr id="row-<%= variant._id %>">
                                <td><%= variant.name || 'Không có tên' %></td>
                                <td>
                                    <% variant.values.forEach(value => { %>
                                        <span class="badge bg-secondary me-1"><%= value %></span>
                                    <% }); %>
                                </td>
                                <td class="text-center">
                                    <div class="action-buttons justify-content-center">
                                        <button class="btn btn-warning btn-sm" onclick="editVariant('<%= variant._id %>')" title="Sửa">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-danger btn-sm" onclick="deleteVariant('<%= variant._id %>')" title="Xóa">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Right Panel - Variant Selection -->
        <div class="right-panel">
            <h5 class="panel-title">Tổ hợp thuộc tính</h5>
            <div id="variantSelectionRows" class="variant-selection-container">
                <!-- Variant groups will be added here -->
            </div>
            <button class="btn btn-info btn-custom mt-3" onclick="addVariantGroup()">
                <i class="fas fa-plus me-1"></i> Thêm tổ hợp thuộc tính
            </button>
        </div>
    </div>

    <!-- Add Variant Modal -->
    <div class="modal fade" id="addVariantModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title">Thêm thuộc tính mới</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addVariantForm">
                        <div class="mb-3">
                            <label class="form-label fw-bold">Tên thuộc tính</label>
                            <input type="text" id="variantName" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">Danh mục sản phẩm</label>
                            <select id="typeProductId" class="form-control" required>
                                <option value="">Chọn danh mục</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">Giá trị thuộc tính</label>
                            <input type="text" id="variantValues" class="form-control" 
                                   placeholder="Nhập các giá trị, cách nhau bằng dấu phẩy" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Thêm thuộc tính</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Variant Modal -->
    <div class="modal fade" id="editVariantModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h5 class="modal-title">Chỉnh sửa thuộc tính</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editVariantForm">
                        <input type="hidden" id="editVariantId">
                        <div class="mb-3">
                            <label class="form-label fw-bold">Tên thuộc tính</label>
                            <input type="text" id="editVariantName" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">Danh mục sản phẩm</label>
                            <select id="editTypeProductId" class="form-control" required>
                                <option value="">Chọn danh mục</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">Giá trị thuộc tính</label>
                            <input type="text" id="editVariantValues" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-warning w-100">Lưu thay đổi</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Messages -->
    <div class="toast-container">
        <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <strong class="me-auto">Thành công</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body"></div>
        </div>
        <div id="errorToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-danger text-white">
                <strong class="me-auto">Lỗi</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        let selectedVariants = [];
        window.variantsData = <%- JSON.stringify(variants) %>;
        const typeProductId = '<%= typeProductId || "" %>';

        // Tải danh sách danh mục sản phẩm
        function loadTypeProducts(selectId) {
            $.get('/typeproduct/json', function(response) {
                if (response.status === 'Ok') {
                    const $select = $(selectId);
                    $select.empty().append('<option value="">Chọn danh mục</option>');
                    response.data.forEach(type => {
                        $select.append(`<option value="${type._id}">${type.name}</option>`);
                    });
                    if (typeProductId) $select.val(typeProductId);
                } else {
                    showErrorToast('Lỗi khi tải danh mục: ' + response.message);
                }
            }).fail(() => showErrorToast('Lỗi khi tải danh mục!'));
        }

        $(document).ready(function() {
            loadTypeProducts('#typeProductId');
            loadTypeProducts('#editTypeProductId');
            console.log('Trang biến thể đã tải xong', { variants: window.variantsData, typeProductId });
            addVariantRow(1); // Thêm một nhóm biến thể mặc định
        });

        // Thêm một nhóm biến thể mới
        function addVariantGroup() {
            const groupId = Date.now();
            $('#variantSelectionRows').append(`
                <div class="variant-group" id="variant-group-${groupId}">
                    <div class="variant-group-header">
                        <h6 class="variant-group-title">Tổ hợp biến thể #${$('.variant-group').length + 1}</h6>
                        <button class="btn btn-danger btn-sm" onclick="$('#variant-group-${groupId}').remove(); updateSelectedVariants()">
                            <i class="fas fa-trash"></i> Xóa tổ hợp
                        </button>
                    </div>
                    <div class="variant-rows-container" id="variant-rows-${groupId}"></div>
                    <button class="btn btn-info btn-sm w-100" onclick="addVariantRow(${groupId})">
                        <i class="fas fa-plus"></i> Thêm biến thể vào tổ hợp
                    </button>
                </div>
            `);
            addVariantRow(groupId);
        }

        // Thêm hàng chọn biến thể vào một nhóm
        function addVariantRow(groupId) {
            const rowId = Date.now();
            const html = `
                <div class="variant-row" id="variant-row-${rowId}" data-group="${groupId}">
                    <select class="form-control variant-select" onchange="updateVariantValues(${rowId})">
                        <option value="">Chọn biến thể</option>
                        ${window.variantsData.map(variant => 
                            `<option value="${variant._id}">${variant.name}</option>`).join('')}
                    </select>
                    <select class="form-control value-select" disabled>
                        <option value="">Chọn giá trị</option>
                    </select>
                    <button class="btn btn-danger btn-delete" onclick="$('#variant-row-${rowId}').remove(); updateSelectedVariants()">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>`;
            
            if ($(`#variant-rows-${groupId}`).length) {
                $(`#variant-rows-${groupId}`).append(html);
            } else {
                $('#variantSelectionRows').append(html);
            }
        }

        // Cập nhật các giá trị biến thể khi chọn một biến thể
        function updateVariantValues(rowId) {
            const $row = $(`#variant-row-${rowId}`);
            const variantId = $row.find('.variant-select').val();
            const $valueSelect = $row.find('.value-select');
            $valueSelect.empty().append('<option value="">Chọn giá trị</option>');

            if (variantId) {
                const variant = window.variantsData.find(v => v._id === variantId);
                if (variant) {
                    variant.values.forEach(value => {
                        $valueSelect.append(`<option value="${value}">${value}</option>`);
                    });
                    $valueSelect.prop('disabled', false);
                }
            } else {
                $valueSelect.prop('disabled', true);
            }
            updateSelectedVariants();
        }

        // Cập nhật danh sách biến thể đã chọn
        function updateSelectedVariants() {
            selectedVariants = [];
            
            // Xử lý cách mới: theo nhóm
            $('.variant-group').each(function() {
                const groupId = $(this).attr('id').replace('variant-group-', '');
                const groupVariants = [];
                
                $(`#variant-rows-${groupId} .variant-row`).each(function() {
                    const variantId = $(this).find('.variant-select').val();
                    const value = $(this).find('.value-select').val();
                    if (variantId && value) {
                        groupVariants.push({ variantId, value });
                    }
                });
                
                if (groupVariants.length > 0) {
                    selectedVariants.push(groupVariants);
                }
            });
            
            // Xử lý cách cũ: các hàng không thuộc nhóm
            const standaloneVariants = [];
            $('#variantSelectionRows > .variant-row').each(function() {
                const variantId = $(this).find('.variant-select').val();
                const value = $(this).find('.value-select').val();
                if (variantId && value) {
                    standaloneVariants.push({ variantId, value });
                }
            });
            
            if (standaloneVariants.length > 0) {
                selectedVariants.push(standaloneVariants);
            }
            
            console.log('Danh sách tổ hợp biến thể đã chọn:', selectedVariants);
        }

        // Xác nhận chọn biến thể
        function confirmSelection() {
            updateSelectedVariants();
            if (selectedVariants.length === 0) {
                showErrorToast('Vui lòng chọn ít nhất một biến thể!');
                return;
            }
            console.log('Gửi tổ hợp biến thể đã chọn về parent window:', selectedVariants);
            window.opener.postMessage({ selectedVariants: selectedVariants }, '*');
            window.close();
        }

        // Thêm biến thể
        $('#addVariantForm').submit(function(e) {
            e.preventDefault();
            const name = $('#variantName').val().trim();
            const typeProductId = $('#typeProductId').val();
            const values = $('#variantValues').val().split(',').map(v => v.trim()).filter(v => v);

            if (!name || !typeProductId || values.length === 0) {
                showErrorToast('Vui lòng nhập đầy đủ thông tin!');
                return;
            }

            console.log('Gửi yêu cầu thêm biến thể:', { name, typeProductId, values });

            $.ajax({
                url: '/products/variants/create',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ name, typeProductId, values }),
                success: function(response) {
                    if (response.status === 'Ok') {
                        showSuccessToast('Thêm biến thể thành công!');
                        $('#addVariantModal').modal('hide');
                        const newVariant = response.data;
                        window.variantsData.push(newVariant);
                        $('#variantTableBody').append(`
                            <tr id="row-${newVariant._id}">
                                <td>${newVariant.name}</td>
                                <td>${newVariant.values.map(v => `<span class="badge bg-secondary me-1">${v}</span>`).join('')}</td>
                                <td class="text-center">
                                    <div class="action-buttons">
                                        <button class="btn btn-warning btn-custom" onclick="editVariant('${newVariant._id}')" title="Sửa">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-danger btn-custom" onclick="deleteVariant('${newVariant._id}')" title="Xóa">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>`);
                        $('.variant-select').append(`<option value="${newVariant._id}">${newVariant.name}</option>`);
                    } else {
                        showErrorToast(response.message);
                    }
                },
                error: function(xhr) {
                    showErrorToast('Lỗi khi thêm biến thể: ' + (xhr.responseJSON?.message || 'Vui lòng thử lại!'));
                }
            });
        });

        // Sửa biến thể
        function editVariant(id) {
            const variant = window.variantsData.find(v => v._id === id);
            if (!variant) return;
            $('#editVariantId').val(id);
            $('#editVariantName').val(variant.name);
            $('#editTypeProductId').val(variant.typeProductId);
            $('#editVariantValues').val(variant.values.join(', '));
            $('#editVariantModal').modal('show');
        }

        $('#editVariantForm').submit(function(e) {
            e.preventDefault();
            const id = $('#editVariantId').val();
            const name = $('#editVariantName').val().trim();
            const typeProductId = $('#editTypeProductId').val();
            const values = $('#editVariantValues').val().split(',').map(v => v.trim()).filter(v => v);

            if (!name || !typeProductId || values.length === 0) {
                showErrorToast('Vui lòng nhập đầy đủ thông tin!');
                return;
            }

            console.log('Gửi yêu cầu cập nhật biến thể:', { id, name, typeProductId, values });

            $.ajax({
                url: `/products/variants/update/${id}`,
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify({ name, typeProductId, values }),
                success: function(response) {
                    if (response.status === 'Ok') {
                        showSuccessToast('Cập nhật biến thể thành công!');
                        $('#editVariantModal').modal('hide');
                        const updatedVariant = response.data;
                        const index = window.variantsData.findIndex(v => v._id === id);
                        window.variantsData[index] = updatedVariant;
                        $(`#row-${id}`).replaceWith(`
                            <tr id="row-${updatedVariant._id}">
                                <td>${updatedVariant.name}</td>
                                <td>${updatedVariant.values.map(v => `<span class="badge bg-secondary me-1">${v}</span>`).join('')}</td>
                                <td class="text-center">
                                    <div class="action-buttons">
                                        <button class="btn btn-warning btn-custom" onclick="editVariant('${updatedVariant._id}')" title="Sửa">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-danger btn-custom" onclick="deleteVariant('${updatedVariant._id}')" title="Xóa">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>`);
                        $('.variant-select option[value="' + id + '"]').text(updatedVariant.name);
                    } else {
                        showErrorToast(response.message);
                    }
                },
                error: function(xhr) {
                    showErrorToast('Lỗi khi cập nhật biến thể: ' + (xhr.responseJSON?.message || 'Vui lòng thử lại!'));
                }
            });
        });

        // Xóa biến thể
        function deleteVariant(id) {
            if (!confirm('Bạn có chắc chắn muốn xóa biến thể này không?')) return;
            console.log('Gửi yêu cầu xóa biến thể:', id);
            $.ajax({
                url: `/products/variants/delete/${id}`,
                type: 'DELETE',
                success: function(response) {
                    if (response.status === 'Ok') {
                        showSuccessToast('Xóa biến thể thành công!');
                        $(`#row-${id}`).remove();
                        window.variantsData = window.variantsData.filter(v => v._id !== id);
                        $('.variant-select option[value="' + id + '"]').remove();
                        updateSelectedVariants();
                    } else {
                        showErrorToast(response.message);
                    }
                },
                error: function(xhr) {
                    showErrorToast('Lỗi khi xóa biến thể: ' + (xhr.responseJSON?.message || 'Vui lòng thử lại!'));
                }
            });
        }

        // Hiển thị toast
        function showSuccessToast(message) {
            $('#successToast .toast-body').text(message);
            new bootstrap.Toast($('#successToast')).show();
        }

        function showErrorToast(message) {
            $('#errorToast .toast-body').text(message);
            new bootstrap.Toast($('#errorToast')).show();
        }
    </script>
</body>
</html>