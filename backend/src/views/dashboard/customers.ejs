<%- include('../layouts/main.ejs') %>
<div class="main-content">
    <h1 class="text-center mb-4">Danh sách khách hàng</h1>

    <style>
        .card {
            border: 1px solid #ddd;
            border-radius: 10px;
            margin-bottom: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .card-title {
            font-weight: bold;
            color: #333;
        }
        .card-text {
            color: #555;
        }
        .alert {
            font-size: 14px;
        }
    </style>
    

<!-- Tìm kiếm khách hàng -->
<div class="container mt-4">
    <input type="text" id="phoneSearch" class="form-control mb-4" placeholder="Tìm kiếm theo số điện thoại">

    <div id="searchResults"></div>
</div>


    <!-- Thêm khách hàng -->
    <div class="mb-4">
        <h3>Thêm khách hàng mới</h3>
        <form id="addCustomerForm" action="/customers" method="POST">

            <div class="mb-3">
                <label class="form-label">Họ tên</label>
                <input type="text" class="form-control" name="fullName" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Số điện thoại</label>
                <input type="text" class="form-control" name="phoneNumber" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Email</label>
                <input type="email" class="form-control" name="email" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Địa chỉ</label>
                <input type="text" class="form-control" name="address">
            </div>
            <div class="mb-3">
                <label class="form-label">Ngày sinh</label>
                <input type="date" class="form-control" name="birthDate">
            </div>
            <div class="mb-3">
                <label class="form-label">Avatar (URL)</label>
                <input type="text" class="form-control" name="avatar">
            </div>
            <button type="submit" class="btn btn-primary">Thêm khách hàng</button>
        </form>
    </div>

    <!-- Danh sách khách hàng -->
    <div>
        <table class="table table-bordered">
            <thead>
            <tr>
                <th>ID</th>
                <th>Họ Tên</th>
                <th>Số Điện Thoại</th>
                <th>Email</th>
                <th>Địa Chỉ</th>
                <th>Ngày Sinh</th>
                <th>Avatar</th>
                <th>Hành động</th>
            </tr>
            </thead>
            <tbody id="customerTableBody">
            <% customers.forEach(function(customer) { %>
                <tr>
                    <td><%= customer._id %></td>
                    <td><%= customer.fullName %></td>
                    <td><%= customer.phoneNumber %></td>
                    <td><%= customer.email %></td>
                    <td><%= customer.address %></td>
                            <td>
                <% if (customer.birthDate && customer.birthDate.getTime() > 0) { %>
                    <%= new Date(customer.birthDate).toLocaleDateString() %>
                <% } else { %>
                    Chưa cập nhật
                <% } %>
                </td>
                    <td>
                        <% if (customer.avatar) { %>
                            <img src="<%= customer.avatar %>" alt="Avatar" width="50">
                        <% } else { %>
                            Chưa có
                        <% } %>
                    </td>

                    <td>
                        <button class="btn btn-warning btn-sm"
                                onclick="editCustomer('<%= customer._id %>', '<%= customer.fullName %>', '<%= customer.phoneNumber %>', '<%= customer.email %>', '<%= customer.address %>', '<%= customer.birthDate ? (typeof customer.birthDate.toISOString === 'function' ? customer.birthDate.toISOString().split('T')[0] : customer.birthDate) : '' %>', '<%= customer.avatar %>')">
                            Sửa
                        </button>
                        <button onclick="deleteCustomer('<%= customer._id %>')" class="btn btn-danger btn-sm">Xóa
                        </button>
                    </td>
                </tr>
            <% }); %>
            </tbody>
        </table>
    </div>

</div>


<!-- Form chỉnh sửa khách hàng (ẩn ban đầu) -->
<div id="editCustomerModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chỉnh sửa khách hàng</h5>
                <button type="button" class="btn-close" onclick="closeEditModal()"></button>
            </div>
            <div class="modal-body">
                <form id="editCustomerForm">
                    <input type="hidden" id="editCustomerId">
                    <div class="mb-3">
                        <label class="form-label">Họ tên</label>
                        <input type="text" class="form-control" id="editFullName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Số điện thoại</label>
                        <input type="text" class="form-control" id="editPhoneNumber" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" id="editEmail" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Địa chỉ</label>
                        <input type="text" class="form-control" id="editAddress">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Ngày sinh</label>
                        <input type="date" class="form-control" id="editBirthDate">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Avatar (URL)</label>
                        <input type="text" class="form-control" id="editAvatar">
                    </div>
                    <button type="button" class="btn btn-primary" onclick="updateCustomer()">Lưu</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript Validation -->
<script>
 document.getElementById("addCustomerForm").addEventListener("submit", async function (event) {
    event.preventDefault(); // Ngăn chặn submit mặc định

    let fullName = document.querySelector("input[name='fullName']").value.trim();
    let phoneNumber = document.querySelector("input[name='phoneNumber']").value.trim();
    let email = document.querySelector("input[name='email']").value.trim();
    let birthDate = document.querySelector("input[name='birthDate']").value.trim();
    let address = document.querySelector("input[name='address']").value.trim();
    let avatar = document.querySelector("input[name='avatar']").value.trim();

    let phoneRegex = /^[0-9]{10}$/;
    let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    let dateRegex = /^\d{4}-\d{2}-\d{2}$/;
    let urlRegex = /^(https?:\/\/.*\.(?:png|jpg|jpeg|gif|webp))$/i;

    if (!fullName || fullName.length < 3) {
        alert("Họ tên phải có ít nhất 3 ký tự!");
        return;
    }

    if (!phoneRegex.test(phoneNumber)) {
        alert("Số điện thoại không hợp lệ! Phải có đúng 10 chữ số.");
        return;
    }

    if (!emailRegex.test(email)) {
        alert("Email không hợp lệ!");
        return;
    }

    // Kiểm tra email trùng
    let isDuplicate = await checkDuplicateEmail(email);
    if (isDuplicate) {
        alert("Email đã tồn tại! Vui lòng nhập email khác.");
        return;
    }


if (!birthDate || birthDate.trim() === '') {
        document.querySelector("input[name='birthDate']").disabled = true;
    }


    if (!address || address.length < 5) {
        alert("Địa chỉ phải có ít nhất 5 ký tự!");
        return;
    }

    if (avatar && !urlRegex.test(avatar)) {
        alert("Avatar phải là một URL hợp lệ (png, jpg, jpeg, gif, webp)!");
        return;
    }

    event.target.submit(); // Nếu hợp lệ, gửi form
});

    // Hàm kiểm tra email đã tồn tại hay chưa
    async function checkDuplicateEmail(email) {
        try {
            let response = await fetch(`/customers/check-email?email=${encodeURIComponent(email)}`);
            let data = await response.json();
            return data.exists; // Trả về true nếu email đã tồn tại
        } catch (error) {
            console.error("Lỗi kiểm tra email:", error);
            return false; // Nếu có lỗi, coi như email chưa tồn tại
        }
    }

    function deleteCustomer(id) {
    if (confirm("Bạn có chắc chắn muốn xóa khách hàng này không?")) {
        fetch(`/customers/customers/${id}`, {method: "DELETE"})
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.message) {
                    alert("Xóa thành công!");
                    location.reload();
                } else {
                    alert("Có lỗi xảy ra!");
                }
            })
            .catch(error => {
                console.error("Lỗi khi xóa:", error);
                alert("Có lỗi xảy ra khi xóa khách hàng!");
            });
    }
}


    function editCustomer(id, fullName, phoneNumber, email, address, birthDate, avatar) {
        document.getElementById("editCustomerId").value = id;
        document.getElementById("editFullName").value = fullName;
        document.getElementById("editPhoneNumber").value = phoneNumber;
        document.getElementById("editEmail").value = email;
        document.getElementById("editAddress").value = address;
        document.getElementById("editBirthDate").value = birthDate;
        document.getElementById("editAvatar").value = avatar;

        // Hiển thị modal
        document.getElementById("editCustomerModal").style.display = "block";
        document.getElementById("editCustomerModal").classList.add("show");
        document.body.classList.add("modal-open");

        // Tạo backdrop cho modal
        let backdrop = document.createElement("div");
        backdrop.className = "modal-backdrop fade show";
        document.body.appendChild(backdrop);
    }

    function closeEditModal() {
        document.getElementById("editCustomerModal").style.display = "none";
        document.getElementById("editCustomerModal").classList.remove("show");
        document.body.classList.remove("modal-open");

        // Xóa backdrop
        let backdrop = document.querySelector(".modal-backdrop");
        if (backdrop) {
            backdrop.remove();
        }
    }


    function updateCustomer() {
    // Get ID from form
    const id = document.getElementById("editCustomerId").value;
    
    // Prepare update data
    const customerData = {
        fullName: document.getElementById("editFullName").value.trim(),
        phoneNumber: document.getElementById("editPhoneNumber").value.trim(),
        email: document.getElementById("editEmail").value.trim(),
        address: document.getElementById("editAddress").value.trim(),
        birthDate: document.getElementById("editBirthDate").value.trim(),
        avatar: document.getElementById("editAvatar").value.trim()
    };

    // Validate data
    let phoneRegex = /^[0-9]{10}$/;
    let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    let urlRegex = /^(https?:\/\/.*\.(?:png|jpg|jpeg|gif|webp))$/i;

    if (!customerData.fullName || customerData.fullName.length < 3) {
        alert("Họ tên phải có ít nhất 3 ký tự!");
        return;
    }

    if (!phoneRegex.test(customerData.phoneNumber)) {
        alert("Số điện thoại không hợp lệ! Phải có đúng 10 chữ số.");
        return;
    }

    if (!emailRegex.test(customerData.email)) {
        alert("Email không hợp lệ!");
        return;
    }

    if (!customerData.address || customerData.address.length < 5) {
        alert("Địa chỉ phải có ít nhất 5 ký tự!");
        return;
    }

    if (customerData.avatar && !urlRegex.test(customerData.avatar)) {
        alert("Avatar phải là một URL hợp lệ (png, jpg, jpeg, gif, webp)!");
        return;
    }

    // Send update request
    fetch(`/customers/customers/${id}`, {
    method: 'PUT',
    headers: {
        'Content-Type': 'application/json'
    },
    body: JSON.stringify(customerData)
})
    .then(response => {
        if (response.ok) {
            return response.json();
        } else {
            throw new Error(`Cập nhật không thành công. Mã lỗi: ${response.status}`);
        }
    })
    .then(data => {
        alert("Cập nhật khách hàng thành công!");
        closeEditModal();
        // Reload the page to show updated information
        location.reload();
    })
    .catch(error => {
        console.error("Error:", error);
        alert(error.message || "Cập nhật thất bại");
    });
}


//tìm phone
document.getElementById('phoneSearch').addEventListener('input', function() {
    const phoneNumber = this.value.trim();
    const searchResults = document.getElementById('searchResults');
    const customerTableBody = document.getElementById('customerTableBody');

    // If input is empty, show all customers
    if (phoneNumber.length === 0) {
        const customerRows = document.querySelectorAll('#customerTableBody tr');
        customerRows.forEach(row => {
            row.style.display = ''; // Show all rows
        });
        searchResults.innerHTML = ''; // Clear search results
        return;
    }

    if (phoneNumber.length >= 3) {
        fetch(`/customers/search?phoneNumber=${encodeURIComponent(phoneNumber)}`)
            .then(response => response.json())
            .then(data => {
                if (data.customers && data.customers.length > 0) {
                    const resultsHtml = data.customers.map(customer => `
                        <div class="card mb-2 search-result-card" data-phone="${customer.phoneNumber}">
                            <div class="card-body">
                                <h5 class="card-title">${customer.fullName}</h5>
                                <p class="card-text">
                                    Số điện thoại: ${customer.phoneNumber}<br>
                                    Email: ${customer.email}<br>
                                    Địa chỉ: ${customer.address || 'Chưa cập nhật'}
                                </p>
                            </div>
                        </div>
                    `).join('');

                    searchResults.innerHTML = resultsHtml;

                    // Add click event listener to search result cards
                    document.querySelectorAll('.search-result-card').forEach(card => {
                        card.addEventListener('click', function() {
                            const phoneToFilter = this.dataset.phone;
                            filterCustomerTable(phoneToFilter);
                        });
                    });
                } else {
                    searchResults.innerHTML = '<div class="alert alert-info">Không tìm thấy khách hàng nào phù hợp.</div>';
                }
            })
            .catch(error => {
                console.error('Lỗi tìm kiếm:', error);
                searchResults.innerHTML = '<div class="alert alert-danger">Có lỗi xảy ra khi tìm kiếm.</div>';
            });
    } else {
        searchResults.innerHTML = '';
    }
});

function filterCustomerTable(phoneNumber) {
    const customerRows = document.querySelectorAll('#customerTableBody tr');
    
    customerRows.forEach(row => {
        const phoneCellText = row.querySelector('td:nth-child(3)').textContent.trim();
        
        if (phoneCellText === phoneNumber) {
            row.style.display = ''; // Show this row
        } else {
            row.style.display = 'none'; // Hide other rows
        }
    });
}



</script>