<%- include('../layouts/main.ejs') %>
<div class="main-content">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">Danh sách khách hàng</h1>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCustomerModal">
            <i class="fas fa-plus-circle me-2"></i>Thêm khách hàng mới
        </button>
    </div>

    <style>
        .card {
            border: 1px solid #ddd;
            border-radius: 10px;
            margin-bottom: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .card-title {
            font-weight: bold;
            color: #333;
        }
        .card-text {
            color: #555;
        }
        .alert {
            font-size: 14px;
        }
    </style>
    
    <!-- Tìm kiếm khách hàng -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form id="searchForm" class="row g-3">
                <div class="col-md-10">
                    <label for="phoneSearch" class="form-label text-muted small">Tìm kiếm</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" id="phoneSearch" class="form-control border-start-0" placeholder="Tìm kiếm theo số điện thoại, tên, email...">
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="button" class="btn btn-primary w-100" id="applyFilter">
                        <i class="fas fa-filter me-2"></i>Lọc
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Danh sách khách hàng -->
    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="py-3 px-4">Họ Tên</th>
                            <th class="py-3 px-4">Số Điện Thoại</th>
                            <th class="py-3 px-4">Email</th>
                            <th class="py-3 px-4">Địa Chỉ</th>
                            <th class="py-3 px-4">Ngày Sinh</th>
                            <th class="py-3 px-4">Avatar</th>
                            <th class="py-3 px-4 text-center">Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="customerTableBody">
                    <% customers.forEach(function(customer) { %>
                        <tr>
                            <td class="py-3 px-4"><div class="fw-semibold text-dark"><%= customer.fullName %></div></td>
                            <td class="py-3 px-4"><%= customer.phoneNumber %></td>
                            <td class="py-3 px-4"><%= customer.email %></td>
                            <td class="py-3 px-4"><%= customer.address %></td>
                            <td class="py-3 px-4">
                                <% if (customer.birthDate && customer.birthDate.getTime() > 0) { %>
                                    <%= new Date(customer.birthDate).toLocaleDateString() %>
                                <% } else { %>
                                    Chưa cập nhật
                                <% } %>
                            </td>
                            <td class="py-3 px-4">
                                <% if (customer.avatar) { %>
                                    <img src="<%= customer.avatar %>" alt="Avatar" width="40" height="40" class="rounded-circle">
                                <% } else { %>
                                    <div class="avatar-sm bg-light d-flex align-items-center justify-content-center rounded-circle" style="width: 40px; height: 40px;">
                                        <i class="fas fa-user text-secondary"></i>
                                    </div>
                                <% } %>
                            </td>
                            <td class="py-3 px-4 text-center">
                                <button class="btn btn-sm btn-info me-2 edit-customer-btn" 
                                        data-id="<%= customer._id %>"
                                        data-fullname="<%= customer.fullName %>"
                                        data-phone="<%= customer.phoneNumber %>"
                                        data-email="<%= customer.email %>"
                                        data-address="<%= customer.address || '' %>"
                                        data-birthdate="<%= customer.birthDate ? (typeof customer.birthDate.toISOString === 'function' ? customer.birthDate.toISOString().split('T')[0] : customer.birthDate) : '' %>"
                                        data-avatar="<%= customer.avatar || '' %>">
                                    <i class="fas fa-edit"></i>
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                    </tbody>
                </table>
            </div>
            
            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center p-3 border-top">
                <div class="d-flex align-items-center">
                    <label class="text-muted me-2">Hiển thị:</label>
                    <select class="form-select form-select-sm" id="itemsPerPage" style="width: auto;">
                        <option value="5">5</option>
                        <option value="10" selected>10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                    </select>
                    <span class="text-muted ms-2">khách hàng</span>
                </div>
                <nav aria-label="Customer navigation">
                    <ul class="pagination pagination-sm mb-0">
                        <li class="page-item" id="prevPage">
                            <a class="page-link" href="#" aria-label="Previous">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                        <li class="page-item">
                            <span class="page-link" id="currentPage">1</span>
                        </li>
                        <li class="page-item" id="nextPage">
                            <a class="page-link" href="#" aria-label="Next">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
                <div class="text-muted">
                    Tổng số: <span class="fw-semibold" id="totalItems">0</span> khách hàng
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm khách hàng -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="addCustomerModalLabel"><i class="fas fa-user-plus me-2"></i>Thêm khách hàng mới</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCustomerForm" action="/customers" method="POST">
                    <div class="mb-3">
                        <label class="form-label">Họ tên <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="fullName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="phoneNumber" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email <span class="text-danger">*</span></label>
                        <input type="email" class="form-control" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Địa chỉ</label>
                        <input type="text" class="form-control" name="address">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Ngày sinh</label>
                        <input type="date" class="form-control" name="birthDate">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Avatar (URL)</label>
                        <input type="text" class="form-control" name="avatar">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveCustomer">Lưu khách hàng</button>
            </div>
        </div>
    </div>
</div>

<!-- Form chỉnh sửa khách hàng -->
<div id="editCustomerModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning">
                <h5 class="modal-title"><i class="fas fa-user-edit me-2"></i>Chỉnh sửa khách hàng</h5>
                <button type="button" class="btn-close" onclick="closeEditModal()"></button>
            </div>
            <div class="modal-body">
                <form id="editCustomerForm">
                    <input type="hidden" id="editCustomerId">
                    <div class="mb-3">
                        <label class="form-label">Họ tên <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="editFullName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="editPhoneNumber" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email <span class="text-danger">*</span></label>
                        <input type="email" class="form-control" id="editEmail" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Địa chỉ</label>
                        <input type="text" class="form-control" id="editAddress">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Ngày sinh</label>
                        <input type="date" class="form-control" id="editBirthDate">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Avatar (URL)</label>
                        <input type="text" class="form-control" id="editAvatar">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Hủy</button>
                <button type="button" class="btn btn-warning" onclick="updateCustomer()">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

<!-- Confirm Delete Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title"><i class="fas fa-exclamation-triangle me-2"></i>Xác nhận xóa</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa khách hàng này không?
                <input type="hidden" id="deleteCustomerId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xác nhận xóa</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Save customer (from modal)
    document.getElementById("saveCustomer").addEventListener("click", async function () {
        const form = document.getElementById("addCustomerForm");
        
        let fullName = form.querySelector("input[name='fullName']").value.trim();
        let phoneNumber = form.querySelector("input[name='phoneNumber']").value.trim();
        let email = form.querySelector("input[name='email']").value.trim();
        let birthDate = form.querySelector("input[name='birthDate']").value.trim();
        let address = form.querySelector("input[name='address']").value.trim();
        let avatar = form.querySelector("input[name='avatar']").value.trim();

        let phoneRegex = /^[0-9]{10}$/;
        let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        let urlRegex = /^(https?:\/\/.*\.(?:png|jpg|jpeg|gif|webp))$/i;

        if (!fullName || fullName.length < 3) {
            alert("Họ tên phải có ít nhất 3 ký tự!");
            return;
        }

        if (!phoneRegex.test(phoneNumber)) {
            alert("Số điện thoại không hợp lệ! Phải có đúng 10 chữ số.");
            return;
        }

        if (!emailRegex.test(email)) {
            alert("Email không hợp lệ!");
            return;
        }

        // Kiểm tra email trùng
        let isDuplicate = await checkDuplicateEmail(email);
        if (isDuplicate) {
            alert("Email đã tồn tại! Vui lòng nhập email khác.");
            return;
        }

        if (avatar && !urlRegex.test(avatar)) {
            alert("Avatar phải là một URL hợp lệ (png, jpg, jpeg, gif, webp)!");
            return;
        }

        // Nếu hợp lệ, gửi form
        form.submit();
    });

    // Hàm kiểm tra email đã tồn tại hay chưa
    async function checkDuplicateEmail(email) {
        try {
            let response = await fetch(`/customers/check-email?email=${encodeURIComponent(email)}`);
            let data = await response.json();
            return data.exists; // Trả về true nếu email đã tồn tại
        } catch (error) {
            console.error("Lỗi kiểm tra email:", error);
            return false; // Nếu có lỗi, coi như email chưa tồn tại
        }
    }

    function deleteCustomer(id) {
        document.getElementById('deleteCustomerId').value = id;
        new bootstrap.Modal(document.getElementById('deleteConfirmModal')).show();
    }
    
    document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
        const id = document.getElementById('deleteCustomerId').value;
        if (!id) return;
        
        fetch(`/customers/customers/${id}`, {method: "DELETE"})
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.message) {
                    alert("Xóa thành công!");
                    location.reload();
                } else {
                    alert("Có lỗi xảy ra!");
                }
            })
            .catch(error => {
                console.error("Lỗi khi xóa:", error);
                alert("Có lỗi xảy ra khi xóa khách hàng!");
            });
            
        bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal')).hide();
    });

    function editCustomer(id, fullName, phoneNumber, email, address, birthDate, avatar) {
        document.getElementById("editCustomerId").value = id;
        document.getElementById("editFullName").value = fullName;
        document.getElementById("editPhoneNumber").value = phoneNumber;
        document.getElementById("editEmail").value = email;
        document.getElementById("editAddress").value = address;
        document.getElementById("editBirthDate").value = birthDate;
        document.getElementById("editAvatar").value = avatar;

        // Hiển thị modal
        document.getElementById("editCustomerModal").style.display = "block";
        document.getElementById("editCustomerModal").classList.add("show");
        document.body.classList.add("modal-open");

        // Tạo backdrop cho modal
        let backdrop = document.createElement("div");
        backdrop.className = "modal-backdrop fade show";
        document.body.appendChild(backdrop);
    }

    function closeEditModal() {
        document.getElementById("editCustomerModal").style.display = "none";
        document.getElementById("editCustomerModal").classList.remove("show");
        document.body.classList.remove("modal-open");

        // Xóa backdrop
        let backdrop = document.querySelector(".modal-backdrop");
        if (backdrop) {
            backdrop.remove();
        }
    }

    function updateCustomer() {
        // Get ID from form
        const id = document.getElementById("editCustomerId").value;
        
        // Prepare update data
        const customerData = {
            fullName: document.getElementById("editFullName").value.trim(),
            phoneNumber: document.getElementById("editPhoneNumber").value.trim(),
            email: document.getElementById("editEmail").value.trim(),
            address: document.getElementById("editAddress").value.trim(),
            birthDate: document.getElementById("editBirthDate").value.trim(),
            avatar: document.getElementById("editAvatar").value.trim()
        };

        // Validate data
        let phoneRegex = /^[0-9]{10}$/;
        let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        let urlRegex = /^(https?:\/\/.*\.(?:png|jpg|jpeg|gif|webp))$/i;

        if (!customerData.fullName || customerData.fullName.length < 3) {
            alert("Họ tên phải có ít nhất 3 ký tự!");
            return;
        }

        if (!phoneRegex.test(customerData.phoneNumber)) {
            alert("Số điện thoại không hợp lệ! Phải có đúng 10 chữ số.");
            return;
        }

        if (!emailRegex.test(customerData.email)) {
            alert("Email không hợp lệ!");
            return;
        }

        if (customerData.avatar && !urlRegex.test(customerData.avatar)) {
            alert("Avatar phải là một URL hợp lệ (png, jpg, jpeg, gif, webp)!");
            return;
        }

        // Send update request
        fetch(`/customers/customers/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(customerData)
        })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error(`Cập nhật không thành công. Mã lỗi: ${response.status}`);
                }
            })
            .then(data => {
                alert("Cập nhật khách hàng thành công!");
                closeEditModal();
                // Reload the page to show updated information
                location.reload();
            })
            .catch(error => {
                console.error("Error:", error);
                alert(error.message || "Cập nhật thất bại");
            });
    }
    
    // Search functionality
    $('#applyFilter').click(function() {
        const searchText = $('#phoneSearch').val().toLowerCase();
        
        // Create a filter function for the pagination
        const filterFn = function(item) {
            const row = $(item);
            const customerText = row.text().toLowerCase();
            return !searchText || customerText.includes(searchText);
        };
        
        // Use the pagination library to filter the customers
        customerPagination.filterItems(filterFn);
    });
    
    // Initialize pagination system
    const customerPagination = initializePagination({
        itemSelector: '#customerTableBody tr',
        itemsPerPageSelector: '#itemsPerPage',
        prevPageSelector: '#prevPage',
        nextPageSelector: '#nextPage',
        currentPageSelector: '#currentPage',
        totalItemsSelector: '#totalItems',
        itemNameSingular: 'khách hàng',
        itemNamePlural: 'khách hàng',
        onPageChange: function(state) {
            // Update index numbers if needed
            const visibleRows = $('#customerTableBody tr:visible');
            visibleRows.each(function(index) {
                const startIndex = (state.currentPageIndex - 1) * state.itemsPerPage;
                $(this).find('td:first').text(startIndex + index + 1);
            });
        }
    });
    
    // Use data attributes for edit and delete buttons
    $(document).on('click', '.edit-customer-btn', function() {
        const btn = $(this);
        editCustomer(
            btn.data('id'),
            btn.data('fullname'),
            btn.data('phone'),
            btn.data('email'),
            btn.data('address'),
            btn.data('birthdate'),
            btn.data('avatar')
        );
    });

    $(document).on('click', '.delete-customer-btn', function() {
        deleteCustomer($(this).data('id'));
    });
</script>