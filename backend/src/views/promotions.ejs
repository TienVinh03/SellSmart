<%- include('./layouts/main.ejs') %>

<div class="container mt-5">
    <h1 class="text-center mb-4">Danh sách Khuyến mãi</h1>

    <!-- Form thêm/sửa khuyến mãi -->
    <div class="mb-4">
        <form id="promotionForm">
            <input type="hidden" id="promotionId" value="<%= promo._id || '' %>">
            <div class="mb-3">
                <label class="form-label">Tên khuyến mãi</label>
                <input type="text" class="form-control" id="name" value="<%= promo.name || '' %>" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Giảm giá (%)</label>
                <input type="number" class="form-control" id="discount" min="1" max="100" value="<%= promo.discount || 0 %>" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Giá trị đơn hàng tối thiểu</label>
                <input type="number" class="form-control" id="minOrderValue" value="<%= promo.minOrderValue || 0 %>" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Giảm giá tối đa</label>
                <input type="number" class="form-control" id="maxDiscount" value="<%= promo.maxDiscount || 0 %>" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Trạng thái</label>
                <select class="form-control" id="status" disabled>
                    <option value="sapdienra" <%= (promo.status === 'sapdienra' ? 'selected' : '') %>>Sắp diễn ra</option>
                    <option value="active" <%= (promo.status === 'active' ? 'selected' : '') %>>Đang diễn ra</option>
                    <option value="expired" <%= (promo.status === 'expired' ? 'selected' : '') %>>Hết hạn</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Ngày bắt đầu</label>
                <input type="date" class="form-control" id="startDate" value="<%= promo.startDate ? new Date(promo.startDate).toISOString().split('T')[0] : '' %>" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Ngày kết thúc</label>
                <input type="date" class="form-control" id="endDate" value="<%= promo.endDate ? new Date(promo.endDate).toISOString().split('T')[0] : '' %>" required>
            </div>
            <button type="submit" class="btn btn-primary" id="submitBtn">Thêm</button>
            <button type="button" class="btn btn-secondary" id="cancelBtn" style="display: <%= promo._id ? 'inline-block' : 'none' %>;">Hủy</button>
        </form>
    </div>

    <!-- Danh sách khuyến mãi -->
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tên</th>
                <th>Giảm giá</th>
                <th>Giá trị đơn tối thiểu</th>
                <th>Giảm giá tối đa</th>
                <th>Trạng thái</th>
                <th>Ngày bắt đầu</th>
                <th>Ngày kết thúc</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody id="promotionList">
            <% if (promotions && Array.isArray(promotions)) { %>
                <% promotions.forEach(promo => { %>
                    <% 
                        const currentDate = new Date(); // Ngày hiện tại thực tế từ server
                        const startDate = new Date(promo.startDate);
                        const endDate = new Date(promo.endDate);
                        let status = 'expired';
                        if (currentDate < startDate) {
                            status = 'sapdienra';
                        } else if (currentDate >= startDate && currentDate <= endDate) {
                            status = 'active';
                        }
                    %>
                    <tr>
                        <td><%= promo._id || 'N/A' %></td>
                        <td><%= promo.name || 'N/A' %></td>
                        <td><%= promo.discount ? promo.discount + '%' : 'N/A' %></td>
                        <td><%= promo.minOrderValue || 'N/A' %></td>
                        <td><%= promo.maxDiscount || 'N/A' %></td>
                        <td>
                            <% if (status === 'active') { %>
                                <span class="badge bg-success">Đang diễn ra</span>
                            <% } else if (status === 'sapdienra') { %>
                                <span class="badge bg-warning">Sắp diễn ra</span>
                            <% } else { %>
                                <span class="badge bg-secondary">Hết hạn</span>
                            <% } %>
                        </td>
                        <td><%= promo.startDate ? new Date(promo.startDate).toLocaleDateString('en-GB') : 'N/A' %></td>
                        <td><%= promo.endDate ? new Date(promo.endDate).toLocaleDateString('en-GB') : 'N/A' %></td>                        
                        <td>
                            <a class="btn btn-warning btn-sm" 
                            onclick="editPromotion('<%= promo._id %>', 
                                                   '<%= promo.name %>', 
                                                   '<%= promo.discount %>', 
                                                   '<%= promo.minOrderValue %>', 
                                                   '<%= promo.maxDiscount %>', 
                                                   '<%= new Date(promo.startDate).toISOString().split('T')[0] %>', 
                                                   '<%= new Date(promo.endDate).toISOString().split('T')[0] %>')">
                             Sửa
                         </a>
                         
                            <button class="btn btn-danger btn-sm" onclick="deletePromotion('<%= promo._id %>')">Xóa</button>
                        </td>
                    </tr>
                <% }) %>
            <% } else { %>
                <tr>
                    <td colspan="9" class="text-center">Không có dữ liệu khuyến mãi</td>
                </tr>
            <% } %>
        </tbody>
    </table>
</div>

<script>
    const promotionForm = document.getElementById("promotionForm");
    const formTitle = document.getElementById("formTitle");
    const submitBtn = document.getElementById("submitBtn");
    const cancelBtn = document.getElementById("cancelBtn");
    const promotionIdField = document.getElementById("promotionId");

    // Hàm tính trạng thái dựa trên ngày
    function calculateStatus(startDate, endDate) {
        const currentDate = new Date(); // Ngày hiện tại thực tế từ client
        const start = new Date(startDate);
        const end = new Date(endDate);
        if (currentDate < start) return "sapdienra";
        if (currentDate >= start && currentDate <= end) return "active";
        return "expired";
    }

    // Cập nhật trạng thái khi thay đổi ngày
    document.getElementById("startDate").addEventListener("change", updateStatus);
    document.getElementById("endDate").addEventListener("change", updateStatus);

    function updateStatus() {
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;
        if (startDate && endDate) {
            document.getElementById("status").value = calculateStatus(startDate, endDate);
        }
    }

    promotionForm.addEventListener("submit", async (event) => {
        event.preventDefault();
        const promotionData = {
            name: document.getElementById("name").value,
            discount: document.getElementById("discount").value,
            minOrderValue: document.getElementById("minOrderValue").value,
            maxDiscount: document.getElementById("maxDiscount").value,
            status: calculateStatus(document.getElementById("startDate").value, document.getElementById("endDate").value),
            startDate: document.getElementById("startDate").value,
            endDate: document.getElementById("endDate").value,
        };
        const validationError = validatePromotion(promotionData);
        if (validationError) {
            alert(validationError);
            return;
        }
        const promotionId = promotionIdField.value;
        try {
            if (promotionId) {
                await updatePromotion(promotionId, promotionData);
            } else {
                await addPromotion(promotionData);
            }
        } catch (error) {
            console.error("Lỗi:", error);
            alert("Có lỗi xảy ra!");
        }
    });

    function validatePromotion(data) {
        if (!data.name.trim()) return "Tên khuyến mãi không được để trống";
        if (data.discount <= 0 || data.discount > 100) return "Giảm giá phải từ 1% đến 100%";
        if (data.minOrderValue <= 0) return "Giá trị đơn tối thiểu phải lớn hơn 0";
        if (data.maxDiscount <= 0) return "Giảm giá tối đa phải lớn hơn 0";
        if (parseFloat(data.maxDiscount) <= parseFloat(data.minOrderValue)) return "Giảm giá tối đa phải lớn hơn giá trị đơn tối thiểu";
        const startDate = new Date(data.startDate);
        const endDate = new Date(data.endDate);
        if (endDate < startDate) return "Ngày kết thúc phải sau ngày bắt đầu";
        return null;
    }

    async function addPromotion(data) {
        const response = await fetch("/promotions", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
        });
        if (!response.ok) throw new Error("Thêm thất bại");
        const result = await response.json();
        alert(result.message);
        location.reload();
    }



    async function deletePromotion(id) {
        if (confirm("Bạn có chắc chắn muốn xóa?")) {
            const response = await fetch(`/promotions/${id}`, {
                method: "DELETE",
                headers: { "Content-Type": "application/json" },
            });
            if (!response.ok) throw new Error("Xóa thất bại");
            const result = await response.json();
            alert(result.message);
            location.reload();
        }
    }



    //cập nhật
    function editPromotion(id, name, discount, minOrderValue, maxDiscount, startDate, endDate) {
    document.getElementById("promotionId").value = id;
    document.getElementById("name").value = name;
    document.getElementById("discount").value = discount;
    document.getElementById("minOrderValue").value = minOrderValue;
    document.getElementById("maxDiscount").value = maxDiscount;
    document.getElementById("startDate").value = startDate;
    document.getElementById("endDate").value = endDate;

    document.getElementById("submitBtn").textContent = "Cập nhật";
    document.getElementById("cancelBtn").style.display = "inline-block";

    updateStatus(); // Cập nhật trạng thái dựa trên ngày mới
}

document.getElementById("cancelBtn").addEventListener("click", () => {
    document.getElementById("promotionForm").reset();
    document.getElementById("promotionId").value = "";
    document.getElementById("submitBtn").textContent = "Thêm";
    document.getElementById("cancelBtn").style.display = "none";
});


     async function updatePromotion(id, data) {
        const response = await fetch(`/promotions/${id}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
        });
        if (!response.ok) throw new Error("Cập nhật thất bại");
        const result = await response.json();
        alert(result.message);
        location.reload();
    }   


    cancelBtn.addEventListener("click", () => {
        formTitle.textContent = "Thêm Khuyến mãi";
        submitBtn.textContent = "Thêm";
        cancelBtn.style.display = "none";
        promotionIdField.value = "";
        promotionForm.reset();
    });

    // Khởi tạo trạng thái ban đầu khi tải form sửa
    updateStatus();
</script>